@import "./import.less";

:host {
  display: block;
  width: 100%;
}

.@{prefix}-chat__item {
  &__inner {
    display: flex;
    margin-bottom: var(--t-chat-item-gap);
    font-size: var(--t-chat-font-size);

    .@{prefix}-chat__item__avatar {
      flex: 0 0 auto;
    }
    
    .@{prefix}-chat__item__detail {
      box-sizing: border-box;
    }
  
    &.model-change {
      justify-content: center;
      margin-top: @comp-margin-xxl;
    }
  
    &.error {
      .@{prefix}-chat__item__text__content {
        color: @error-color;
      }
    }
    .@{prefix}-chat__item__notice {
      // 水平居中
      background: @bg-color-secondarycontainer;
      padding: @comp-paddingTB-xxs @comp-paddingLR-s;
      font-size: @font-size-s;
      color: @text-color-disabled;
      border-radius: @border-radius-default;
      box-sizing: border-box;
      line-height: 20px;
      text-align: center;
  
      span {
        color: @text-color-placeholder;
      }
    }

    // 右侧对齐
    &.right {
      .@{prefix}-chat__item__avatar {
        order: 2;
      }

      .@{prefix}-chat__item__main {
        align-items: flex-end;
      }

      .@{prefix}-chat__item__header {
        padding: var(--t-chat-item-header-padding-right);
      }

      .@{prefix}-chat__item__name {
        order: 2;
        padding: var(--t-chat-item-name-padding-right);
      }
    }
  }

  // variant
  &--variant--base {
    .@{prefix}-chat__item__content {
      background-color: var(--t-chat-item-primary-bg);
      border-color: transparent;
    }
  }
  
  &--variant--outline {
    .@{prefix}-chat__item__content {
      background-color: var(--t-chat-item-default-bg);
      border-color: var(--t-chat-item-outline-border-color);
    }
  }

  &--variant--text {
    .@{prefix}-chat__item__content {
      background-color: transparent;
    }
  }

  &__main {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  &__avatar {
    flex-shrink: 0;
    cursor: pointer;
    display: flex;
    margin: var(--t-chat-item-avatar-margin);
    padding: var(--t-chat-item-avatar-padding);
  
    &__box {
    }
  
    &-image {
      width: @comp-size-m;
      height: @comp-size-m;
      border-radius: @border-radius-circle;
    }
  }

  &__content {
    display: inline-block;
    // less中同时使用min和var有bug，目前只能这么写 https://github.com/less/less.js/issues/3777
    max-width: e('min(100%, var(--t-chat-item-content-max-width))');
    padding: var(--t-chat-item-content-padding);
    border: 1px solid transparent;
    border-radius: var(--t-chat-item-content-radius);

    .@{prefix}-skeleton {
      width: 100%;
      padding: @pop-padding-xxl;
    }
  }

  &__think {
    width: 100%;

    &::part(@{prefix}-collapse) {
      width: 100%;
      margin-bottom: var(--t-chat-item-think-margin-bottom);
      padding: var(--t-chat-item-think-padding-tb) var(--t-chat-item-think-padding-lr);
      border: none;
      border-radius: var(--t-chat-item-think-radius);
      background-color: var(--t-chat-item-think-bg);
      overflow: hidden;
    }

    &::part(@{prefix}-collapse-panel__header) {
      padding: 0;
      border: none;
    }
    &::part(@{prefix}-collapse-panel__header-content) {
      display: flex;
      align-items: center;
      gap: var(--t-chat-item-think-title-gap);
    }
    // status icon
    &::part(@{prefix}-chat__item__think__status--pending) {
      width: var(--t-chat-item-think-status-wh);
      height: var(--t-chat-item-think-status-wh);
      border-radius: calc(var(--t-chat-item-think-status-wh) / 2);
      background: var(--t-chat-item-think-status-pending-color);
      // 现在思维链更新时动画会被刷新，看怎么处理
      animation: t-chat-item-think-pending 2s linear infinite;
    }
    &::part(@{prefix}-chat__item__think__status--complete) {
      display: flex;
      width: var(--t-chat-item-think-status-wh);
      height: var(--t-chat-item-think-status-wh);
      color: var(--t-chat-item-think-status-sent-color);
    }
    &::part(@{prefix}-chat__item__think__status--error) {
      display: flex;
      width: var(--t-chat-item-think-status-wh);
      height: var(--t-chat-item-think-status-wh);
      color: var(--t-chat-item-think-status-error-color);
    }

    &::part(@{prefix}-collapse-panel__header-content) {
      font-weight: 400;
    }

    &::part(@{prefix}-collapse-panel__body) {
      border: none;
    }

    &::part(@{prefix}-collapse-panel__content) {
      margin-top: var(--t-chat-item-think-content-margin-top);
      padding: 0;
      color: var(--t-chat-item-think-content-color);
    }
  }

  &__header {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: baseline;
    font: @font-title-small;
    color: @text-color-placeholder;
    padding: var(--t-chat-item-header-padding);
  }

  &__name {
    padding: var(--t-chat-item-name-padding);
  }

  &__actions-margin {
    margin-left: @comp-margin-l;
  }

  &__actions {
    margin-top: @comp-margin-xs;
    display: flex;
    list-style: none;
    padding: var(--t-chat-action-icon-padding);
    background-color: @bg-color-secondarycontainer;
    border-radius: @border-radius-medium;
    border: 1px solid @border-level-2-color;
    overflow: hidden;

    & .@{prefix}-button {
      padding: @pop-padding-s;
      width: @comp-size-xxxs;
      height: @comp-size-xxxs;
      box-sizing: content-box;
      color: @text-color-primary;
      background-color: @bg-color-secondarycontainer;
      border: 0;
      margin-right: @comp-margin-xs;
      .@{prefix}-icon {
        font-size: @font-size-l;
      }
    }
    & .@{prefix}-chat__item-button--active {
      color: @brand-color;
    }
    & .@{prefix}-button:hover {
      background-color: @chat-actions-hover;
    }
    & .@{prefix}-space .@{prefix}-space-item {
      height: @comp-size-xs;
    }
  }

  &__refresh {
    display: flex;
    align-items: center;

    &-line {
      width: 1px;
      height: @comp-size-xxxs;
      background-color: var(chat-refresh-line);
      margin-right: @comp-margin-xs;
    }
  }

  &__copy-btn {
    color: @code-font-color-base;
    // margin-left: auto;
    cursor: pointer;
  }
}